@using WebApp.Services.Impl
@rendermode InteractiveServer
@inject CloudMenuService Menu
@inject NavigationManager Nav

<div class="cloud-menu">
    <div class="scopes-search__container">
        <input class="scopes-search__input" placeholder="Search"/>
    </div>
    <div class="scopes-list__container">
        <div class="scopes-list__static-container">
            <div class="menu-link link-to-dashboard @(Menu.State.MenuHasActiveItem ? "" : "menu-link-active")">
                <div role="button" class="expand-button @(Menu.State.MenuExpanded ? "toggled" : "")" @onclick="ToggleMenu">
                    <svg class="arrow-icon" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 16 16">
                        <path fill="currentColor" fill-rule="evenodd" d="M2.97 5.47a.75.75 0 0 1 1.06 0L8 9.44l3.97-3.97a.75.75 0 1 1 1.06 1.06l-4.5 4.5a.75.75 0 0 1-1.06 0l-4.5-4.5a.75.75 0 0 1 0-1.06Z" clip-rule="evenodd"/>
                    </svg>
                </div>
                <a href="" class="link-to-dashboard__title-link">
                    <div class="link-to-dashboard__title">
                        cloud-@CloudName
                    </div>
                </a>
                @* <div class="actions-button"> *@
                @*      *@
                @* </div> *@
            </div>
        </div>
        <div class="scopes-list__scrollable-container @(Menu.State.MenuExpanded ? "" : "shrank")">
            @if (_scopes is null)
            {
                <div>
                    Loading scopes...
                </div>
            }
            else
            {
                foreach (var scope in _scopes)
                {
                    <a href="scopes/@scope.Id">
                        <div class="menu-link @(scope.IsActive ? "menu-link-active" : "") scope-item">
                            <div class="scope-icon" style="color: rgb(255, 255, 255); background-color: @scope.IconColorHexCode;">
                                <span>@scope.Name[..2].ToUpper()</span>
                            </div>
                            <div class="scope-name">@scope.Name</div>
                        </div>
                    </a>
                }
            }
        </div>
    </div>
</div>

@code {
    private ScopeRecord[]? _scopes;
    
    [Parameter]
    public string CloudId { get; set; }
    
    [Parameter]
    public string CloudName { get; set; }

    protected override async Task OnInitializedAsync()
    {
        _scopes = await Menu.GetScopesAsync(CloudId);
        Menu.SetActiveMenuItem(Nav.Uri);
    }

    private void ToggleMenu()
    {
        Menu.State.MenuExpanded = !Menu.State.MenuExpanded;
    }
}